# This file contains common pin mappings for RAMPS (v1.3 and later)
# boards. RAMPS boards typically use a firmware compiled for the AVR
# atmega2560 (though other AVR chips are also possible).

# See the example.cfg file for a description of available parameters.

[stepper_x]
step_pin: ar54
dir_pin: ar55
enable_pin: !ar38
step_distance: 0.01125
#endstop_pin: ^!ar3
endstop_pin: ^ar2
position_endstop: 150
position_max: 150
homing_speed: 50
homing_retract_dist: 5.0
homing_positive_dir: True

[stepper_y]
step_pin: ar60
dir_pin: !ar61
enable_pin: !ar56
step_distance: 0.01312
#endstop_pin: ^!ar14
endstop_pin: ^ar15
position_endstop: 150
position_max: 150
homing_speed: 50
homing_retract_dist: 5.0
homing_positive_dir: True

[stepper_z]
step_pin: ar46
dir_pin: ar48
enable_pin: !ar62
step_distance: 0.0003125
endstop_pin: ^ar18
#endstop_pin: ^ar19
position_endstop: 0.0
position_max: 150
homing_speed: 5
homing_retract_dist: 5.0
homing_positive_dir: False

[extruder]
step_pin: ar26
dir_pin: !ar28
enable_pin: !ar24
step_distance: 0.0043478261
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 50.0
max_extrude_only_velocity: 100
max_extrude_only_accel: 8000
pressure_advance: 0.05
pressure_advance_lookahead_time: 0.010
heater_pin: ar10
max_power: 1.0
sensor_type: NTC 100K beta 3950
sensor_pin: analog13
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
pid_deriv_time: 2.0
min_extrude_temp: 150
min_temp: 0
max_temp: 250

[fan]
pin: ar4
max_power: 1.0
shutdown_speed: 0.0
#cycle_time: 0.010
hardware_pwm: True
kick_start_time: 0.300

[mcu]
serial: /dev/ttyACM0
pin_map: arduino
#baud: 250000
restart_method: arduino

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 1500
max_z_velocity: 10
max_z_accel: 100
motor_off_time: 600
junction_deviation: 0.05

# EXTRAS

# Heater and temperature sensor verification. Heater verification is
# automatically enabled for each heater that is configured on the
# printer. Use verify_heater sections to change the default settings.
[verify_heater extruder]
heating_gain: 1
#   The minimum temperature (in Celsius) that the heater must increase
#   by when approaching a new target temperature. The default is 2.
check_gain_time: 30
#   The amount of time (in seconds) that the heating_gain must be met
#   in before an error is raised. The default is 20 seconds for
#   extruders and 60 seconds for heater_bed.
hysteresis: 5
#   The difference between the target temperature and the current
#   temperature for the heater to be considered within range of the
#   target temperature. The default is 5.
max_error: 200
#   The maximum temperature difference a heater that falls outside the
#   target temperature range may accumulate before an error is
#   raised. For example, if the target temperature is 200, the
#   hysteresis is 5, the max_error is 120, and the temperature is
#   reported at 185 degrees for 12 seconds then an error would be
#   raised (or 24 seconds at 190, or 120 seconds at 194, etc.). The
#   default is 120.

# A virtual sdcard may be useful if the host machine is not fast
# enough to run OctoPrint well. It allows the Klipper host software to
# directly print gcode files stored in a directory on the host using
# standard sdcard G-Code commands (eg, M24).
[virtual_sdcard]
path: ~/.octoprint/uploads/
#   The path of the local directory on the host machine to look for
#   g-code files. This is a read-only directory (sdcard file writes
#   are not supported). One may point this to OctoPrint's upload
#   directory (generally ~/.octoprint/uploads/ ). This parameter must
#   be provided.

# "RepRapDiscount 128x64 Full Graphic Smart Controller" type displays
[display]
lcd_type: st7920
cs_pin: ar16
sclk_pin: ar23
sid_pin: ar17

# Z height probe. One may define this section to enable Z height
# probing hardware. When this section is enabled, PROBE and
# QUERY_PROBE extended g-code commands become available. The probe
# section also creates a virtual probe:z_virtual_endstop pin. One may
# set the stepper_z endstop_pin to this virtual pin on cartesian style
# printers that use the probe in place of a z endstop.
[probe]
pin: !ar19
#   Probe detection pin. This parameter must be provided.
z_offset: 3.0
#   The distance (in mm) between the bed and the nozzle when the probe
#   triggers. This parameter must be provided.
speed: 5.0
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
#activate_gcode:
#   A list of G-Code commands (one per line) to execute prior to each
#   probe attempt. This may be useful if the probe needs to be
#   activated in some way. The default is to not run any special
#   G-Code commands on activation.
#deactivate_gcode:
#   A list of G-Code commands (one per line) to execute after each
#   probe attempt completes. The default is to not run any special
#   G-Code commands on deactivation.

[heater_fan my_nozzle_fan]
pin: ar5
max_power: 1.0
shutdown_speed: 0.0
#cycle_time: 0.010
hardware_pwm: True
kick_start_time: 0.300
#   See the "fan" section in example.cfg for a description of the
#   above parameters.
heater: extruder
#   Name of the config section defining the heater that this fan is
#   associated with.  The default is "extruder".
heater_temp: 50.0
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0

# Run-time configurable output pins (one may define any number of
# sections with an "output_pin" prefix). Pins configured here will be
# setup as output pins and one may modify them at run-time using the
# "SET_PIN PIN=my_pin VALUE=.1" extended g-code command.
[output_pin my_pin]
pin: ar6
#   The pin to configure as an output. This parameter must be
#   provided.
pwm: True
#   Set if the output pin should be capable of
#   pulse-width-modulation. If this is true, the value fields should
#   be between 0 and 1; if it is false the value fields should be
#   either 0 or 1. The default is False.
#static_value:
#   If this is set, then the pin is assigned to this value at startup
#   and the pin can not be changed during runtime. A static pin uses
#   slightly less ram in the micro-controller. The default is to use
#   runtime configuration of pins.
value: 1.0
#   The value to initially set the pin to during MCU
#   configuration. The default is 0 (for low voltage).
#shutdown_value:
#   The value to set the pin to on an MCU shutdown event. The default
#   is 0 (for low voltage).
cycle_time: 0.010
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based
#   PWM. The default is 0.100 seconds for pwm pins.
hardware_pwm: True
#   Enable this to use hardware PWM instead of software PWM. The
#   default is False.
#scale:
#   This parameter can be used to alter how the 'value' and
#   'shutdown_value' parameters are interpreted for pwm pins. If
#   provided, then the 'value' parameter should be between 0.0 and
#   'scale'. This may be useful when configuring a PWM pin that
#   controls a stepper voltage reference. The 'scale' can be set to
#   the equivalent stepper amperage if the PWM were fully enabled, and
#   then the 'value' parameter can be specified using the desired
#   amperage for the stepper. The default is to not scale the 'value'
#   parameter.

# Bed tilt compensation. One may define a [bed_tilt] config section to
# enable move transformations that account for a tilted bed.
[bed_tilt]
#x_adjust: 0
#   The amount to add to each move's Z height for each mm on the X
#   axis. The default is 0.
#y_adjust: 0
#   The amount to add to each move's Z height for each mm on the Y
#   axis. The default is 0.
# The remaining parameters control a BED_TILT_CALIBRATE extended
# g-code command that may be used to calibrate appropriate x and y
# adjustment parameters.
points:
	150, 130
	110, 130
	70, 130
	30, 130
	30, 90
	70, 90
	110, 90
	150, 90
	150, 50
	110, 50
	70, 50
	30, 50
	30, 10
	70, 10
	110, 10
	150, 10
#    A newline separated list of X,Y points that should be probed
#    during a BED_TILT_CALIBRATE command. The default is to not enable
#    the command.
speed: 50
#   The speed (in mm/s) of non-probing moves during the
#   calibration. The default is 50.
horizontal_move_z: 10
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#manual_probe:
#   If true, then BED_TILT_CALIBRATE will perform manual probing. If
#   false, then a PROBE command will be run at each probe
#   point. Manual probing is accomplished by manually jogging the Z
#   position of the print head at each probe point and then issuing a
#   NEXT extended g-code command to record the position at that
#   point. The default is false if a [probe] config section is present
#   and true otherwise.
